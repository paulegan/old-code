REM password
DECLARE SUB BUTTON (X1!, Y1!, X2!, Y2!, HL!, SH!, CL!)
DECLARE SUB LOGO (LOGOX%, LOGOY%, LM%)
DECLARE FUNCTION BPRESS (TITLE1$, TITLE2$)
DECLARE FUNCTION GETNAME$ (NP%)
DEF SEG = 0: POKE &H417, 0              'capslock off
SCREEN 9                                '640 * 350
DIM SHARED FUNC.RETURN%, TB%, ISM%, CHANGE%, NAM AS STRING * 20
IF INKEY$ = CHR$(0) + CHR$(83) THEN END

GOSUB INIREAD
CALL LOGO(570, 260, 1)

CALL BUTTON(150, 70, 490, 250, 7, 6, 5)
CALL BUTTON(286, 218, 345, 243, 7, 6, 5)
CALL BUTTON(358, 218, 440, 243, 7, 6, 5)
CALL BUTTON(200, 178, 440, 198, 6, 7, 1)
COLOR 1: LOCATE 7, 31: PRINT "PASSWORD PROTECTION"
COLOR 9: LOCATE 17, 38: PRINT "Guest": LOCATE 17, 47: PRINT "Password"
COLOR 2, 7: LOCATE 9, 30: PRINT "    Please enter     ": LOCATE 10, 30: PRINT "     your name:       "

CALL MMCHECK(ISM%)
CALL MMSETLOC(335, 235)
CALL MMCURSORON

LET NAM = GETNAME$(1)
IF FUNC.RETURN% = 2 THEN GOTO PASS
 LET LOG$ = NAM + " " + DATE$ + " " + TIME$ + " " + "[Guest]"
 CALL MMCURSOROFF
 OPEN "PASS.LOG" FOR APPEND AS #2
  PRINT #2, LOG$
 CLOSE #2
 'CHDIR GuestPath$ CHAIN GuestExec$
 SHELL "COPY GUEST.BAT DO.BAT > NUL"
END


PASS:
FOR PAUSE = 1 TO 200: NEXT PAUSE
 COLOR 2, 7
 LOCATE 9, 31: PRINT "Please enter correct"
 LOCATE 10, 31: PRINT "password to continue"
 LOCATE 12, 31: PRINT "                    "
 CALL BUTTON(200, 178, 440, 198, 6, 7, 1)
 COLOR 9: LOCATE 17, 38: PRINT " Dos ": LOCATE 17, 47: PRINT "Windows "
 LFT% = 0: CHANGE% = 1

IF GETNAME$(2) <> PASWORD$ THEN
 CALL BUTTON(200, 178, 440, 198, 6, 7, 1)
 GOSUB MESSAGE
 DO
 LOOP WHILE INKEY$ = ""
 GOTO PASS
END IF

IF FUNC.RETURN% = 3 THEN GOTO CHANGE:
LET LOG$ = NAM + " " + DATE$ + " " + TIME$ + " "

 CALL MMCURSOROFF

IF FUNC.RETURN% = 1 THEN
 LET LOG$ = LOG$ + "[Dos]"
 SHELL "COPY PASS1.BAT DO.BAT > NUL"
END IF
IF FUNC.RETURN% = 2 THEN
 LET LOG$ = LOG$ + "[Windows]"
 SHELL "COPY PASS2.BAT DO.BAT > NUL"
END IF

OPEN "PASS.LOG" FOR APPEND AS #2
 PRINT #2, LOG$
CLOSE #2
 'CHDIR Path$ CHAIN Exec$
END


MESSAGE:
LOCATE 12, 35: COLOR 4, 7
SELECT CASE TRY
 CASE 0
  PRINT " INCORRECT"
 CASE 1
  PRINT "WRONG AGAIN!"
 CASE 2
  PRINT "LAST CHANCE!"
 CASE 3
  COLOR 0, 0: CLS
  DO
  LOOP UNTIL INKEY$ = CHR$(0) + "O"
  END
END SELECT
TRY = TRY + 1
RETURN

CHANGE:
 CALL BUTTON(200, 178, 440, 198, 6, 7, 1)
 COLOR 2, 7: LOCATE 9, 30: PRINT "   Please enter new   ": LOCATE 10, 30: PRINT "      password:       "
 LET PASWORD$ = GETNAME$(1)

 CALL BUTTON(200, 178, 440, 198, 6, 7, 1)
 COLOR 2, 7: LOCATE 9, 30: PRINT "    Please verify     ": LOCATE 10, 30: PRINT "    new password:     "
 IF GETNAME$(1) <> PASWORD$ THEN GOTO CHANGE
   FOR X = 1 TO LEN(PASWORD$)
    MID$(PASWORD$, X, 1) = CHR$(ASC(MID$(PASWORD$, X, 1)) + 18)
   NEXT X

 CALL MMCURSOROFF

 OPEN "PASS.INI" FOR OUTPUT AS #2
  PRINT #2, "Password=" + PASWORD$
  PRINT #2, "GuestExec=" + GuestExec$
  PRINT #2, "PassExec1=" + PassExec1$
  PRINT #2, "PassExec2=" + PassExec2$
 CLOSE #2

 LET LOG$ = NAM + " " + DATE$ + " " + TIME$ + " " + "[Password Changed!!!]"
 OPEN "PASS.LOG" FOR APPEND AS #2
  PRINT #2, LOG$
 CLOSE #2
 SHELL "COPY PASS2.BAT DO.BAT > NUL"
END

INIREAD:
 OPEN "PASS.INI" FOR INPUT AS #1
  LINE INPUT #1, LINE$
   LET PASWORD$ = RIGHT$(LINE$, LEN(LINE$) - INSTR(LINE$, "="))
   FOR X = 1 TO LEN(PASWORD$)
    MID$(PASWORD$, X, 1) = CHR$(ASC(MID$(PASWORD$, X, 1)) - 18)
   NEXT X
   LET PASWORD$ = RTRIM$(PASWORD$)
  INPUT #1, LINE$
   LET GuestExec$ = RIGHT$(LINE$, LEN(LINE$) - INSTR(LINE$, "="))
   INPUT #1, LINE$: LET GuestPath$ = LINE$
  INPUT #1, LINE$
   LET PassExec1$ = RIGHT$(LINE$, LEN(LINE$) - INSTR(LINE$, "="))
   INPUT #1, LINE$: LET PassPath1$ = LINE$
  INPUT #1, LINE$
   LET PassExec2$ = RIGHT$(LINE$, LEN(LINE$) - INSTR(LINE$, "="))
   INPUT #1, LINE$: LET PassPath2$ = LINE$
 CLOSE #1
RETURN

FUNCTION BPRESS (TITLE1$, TITLE2$)
 CALL MMGETLOC(MY%, MX%)
 IF ISM% = 0 THEN
  LET BPRESS = (TB% MOD 2) + 1
  EXIT FUNCTION
 END IF
 IF CHANGE% = 1 THEN
   IF MY% > 545 AND MY% < 595 THEN
    IF MX% > 265 AND MX% < 310 THEN
     LET BPRESS = 3: EXIT FUNCTION
    END IF
   END IF
 END IF
 IF MX% < 217 OR MX% > 244 THEN EXIT FUNCTION
 
  IF MY% > 285 AND MY% < 346 THEN
     CALL MMCURSOROFF
      CALL BUTTON(286, 218, 345, 243, 6, 7, 5)
      COLOR 9: LOCATE 17, 38: PRINT TITLE1$: COLOR 2, 7
     CALL MMCURSORON
      FOR PAUSE = 1 TO 300: NEXT PAUSE
      DO
       CALL MMBUTTON(BLFT%, BRGT%)
      LOOP UNTIL BLFT% = 0
     CALL MMCURSOROFF
      CALL BUTTON(286, 218, 345, 243, 7, 6, 5)
      COLOR 9: LOCATE 17, 38: PRINT TITLE1$: COLOR 2, 7
     CALL MMCURSORON
  LET BPRESS = 1
  END IF
 
  IF MY% > 357 AND MY% < 441 THEN
     CALL MMCURSOROFF
      CALL BUTTON(358, 218, 440, 243, 6, 7, 5)
      COLOR 9: LOCATE 17, 47: PRINT TITLE2$: COLOR 2, 7
     CALL MMCURSORON
      FOR PAUSE = 1 TO 300: NEXT PAUSE
      DO
       CALL MMBUTTON(BLFT%, BRGT%)
      LOOP UNTIL BLFT% = 0
     CALL MMCURSOROFF
      CALL BUTTON(358, 218, 440, 243, 7, 6, 5)
      COLOR 9: LOCATE 17, 47: PRINT TITLE2$: COLOR 2, 7
     CALL MMCURSORON
  LET BPRESS = 2
  END IF

END FUNCTION

SUB BUTTON (X1, Y1, X2, Y2, HL, SH, CL)
IF CL <> 99 THEN LINE (X1, Y1)-(X2, Y2), CL, BF
FOR A = 0 TO 2
 LINE (X1 + A, Y2 - A)-(X1 + A, Y1 + A), HL
 LINE STEP(0, 0)-(X2 - A, Y1 + A), HL
 LINE (X1 + A, Y2 - A)-(X2 - A, Y2 - A), SH
 LINE STEP(0, 0)-(X2 - A, Y1 + A), SH
NEXT A
END SUB

FUNCTION GETNAME$ (NP%)
START:
 COLOR 1, 7
PASS$ = "": A$ = "": X = 27
DO
 LET PASS$ = PASS$ + A$
BACK:
       DO
        CALL MMCLICK(LFT%, RGT%): IF LFT% <> 0 THEN GOTO CLICK
        A$ = INKEY$
       LOOP WHILE A$ = ""
        IF A$ = CHR$(0) + "S" THEN CALL BUTTON(200, 178, 440, 198, 6, 7, 1): GOTO START
        IF A$ = CHR$(9) THEN
         IF ISM% = 0 THEN GOTO TABB
         TB% = TB% + 1
         CALL MMSETLOC(335 + (40 * (TB% MOD 2)), 235)
         GOTO BACK
        END IF
        IF LEFT$(A$, 1) = CHR$(0) OR A$ = CHR$(27) THEN GOTO BACK
        IF A$ = CHR$(8) THEN
         IF X = 27 THEN GOTO BACK
         LOCATE 14, X - 1: PRINT CHR$(219)
         LET PASS$ = LEFT$(PASS$, LEN(PASS$) - 1)
         LET X = X - 1: GOTO BACK
        END IF
     LOCATE 14, X, 1: PRINT CHR$(8);
     X = X + 1
LOOP UNTIL A$ = CHR$(13) OR X = 55
 LOCATE 14, X - 1: PRINT CHR$(219)

CLICK:
 IF PASS$ = "" AND NP% = 1 THEN
   LET FUNC.RETURN% = BPRESS("Guest", "Password")
   IF FUNC.RETURN% <> 1 AND FUNC.RETURN% <> 2 THEN GOTO BACK
   COLOR 3, 7: LOCATE 12, 31: PRINT "A name is required!!"
   GOTO START
 END IF
 IF NP% = 1 THEN LET FUNC.RETURN% = BPRESS("Guest", "Password")
 IF NP% = 2 THEN LET FUNC.RETURN% = BPRESS(" Dos ", "Windows ")
 IF FUNC.RETURN% < 1 OR FUNC.RETURN% > 3 THEN GOTO BACK
 LET GETNAME$ = PASS$
EXIT FUNCTION

TABB:
 LINE (356 - (72 * (TB% MOD 2)), 216)-(442 - (95 * (TB% MOD 2)), 245), 8, B
 LINE (357 - (72 * (TB% MOD 2)), 217)-(441 - (95 * (TB% MOD 2)), 244), 8, B
  LET TB% = TB% + 1
 LINE (356 - (72 * (TB% MOD 2)), 216)-(442 - (95 * (TB% MOD 2)), 245), 5, B
 LINE (357 - (72 * (TB% MOD 2)), 217)-(441 - (95 * (TB% MOD 2)), 244), 5, B
GOTO BACK

END FUNCTION

SUB LOGO (LOGOX%, LOGOY%, LM%)

 LINE (0, 0)-(640, 350), 1, BF
 PALETTE 5, 7
 PALETTE 6, 56
 PALETTE 7, 63
 PALETTE 8, 0
 PALETTE 9, 8
 LET BC = 1: B = 9
 SR = 1.134464   'S / 180 * PI#
 ER = 2          '(180 - S) / 180 * PI#
PSET (LOGOX%, LOGOY%), BC
CIRCLE STEP(0, 45 * LM%), 60 * LM%, 8, SR, ER    '(-75, 95),
CIRCLE STEP(0, 5 * LM%), 60 * LM%, 8, SR + .1, ER - .1
CIRCLE STEP(0, 16 * LM%), 60 * LM%, 8, SR + .1, ER - .1
CIRCLE STEP(0, 5 * LM%), 60 * LM%, 8, SR + .1, ER - .1
CIRCLE STEP(0, 16 * LM%), 60 * LM%, 8, SR + .1, ER - .1
CIRCLE STEP(0, 5 * LM%), 60 * LM%, 8, SR, ER

REM 310,380
LINE STEP(-23 * LM%, -87 * LM%)-STEP(0 * LM%, 47 * LM%), 8
LINE STEP(8 * LM%, -44 * LM%)-STEP(0 * LM%, 37 * LM%), 8   '258,276
LINE STEP(11 * LM%, -39 * LM%)-STEP(0 * LM%, 37 * LM%), 8   '300,270
LINE STEP(8 * LM%, -37 * LM%)-STEP(0 * LM%, 37 * LM%), 8    '320,270
LINE STEP(11 * LM%, -35 * LM%)-STEP(0 * LM%, 37 * LM%), 8
LINE STEP(8 * LM%, -40 * LM%)-STEP(0 * LM%, 47 * LM%), 8    '385,276
PAINT STEP(-3 * LM%, -3 * LM%), 8, 8
PAINT STEP(-20 * LM%, -10 * LM%), 8, 8    '310,150
PAINT STEP(0 * LM%, -15 * LM%), 8, 8
PAINT STEP(0 * LM%, -5 * LM%), 8, 8
PAINT STEP(-5 * LM%, 5 * LM%), 8, 8    '310,255
PAINT STEP(10 * LM%, 0 * LM%), 8, 8

PAINT STEP(-10 * LM%, -10), 4, 8
PAINT STEP(0 * LM%, 15 * LM%), B, 8    '260,220
PAINT STEP(10 * LM%, 0 * LM%), 14, 8
PAINT STEP(0 * LM%, -15 * LM%), 2, 8  '340,120

PSET (LOGOX%, LOGOY%), BC
 CIRCLE STEP(18 * LM%, 26 * LM%), 1 * LM%, 6
 PAINT STEP(0, 0), 6, 6
PSET (LOGOX%, LOGOY%), BC
LINE STEP(-25 * LM%, 5 * LM%)-STEP(0, 5 * LM%), 8
LINE STEP(0, 0)-STEP(-7 * LM%, 2 * LM%), 8
LINE STEP(0, 0)-STEP(0, -5 * LM%), 8
LINE STEP(0, 0)-STEP(7 * LM%, -2 * LM%), 8
PAINT STEP(-2 * LM%, 2 * LM%), 8, 8
DIM BOX(20 * LM%)
GET STEP(-5 * LM%, -2 * LM%)-STEP(7 * LM%, 7 * LM%), BOX
PUT STEP(-7 * LM%, -7 * LM%), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7 * LM%), BOX, PSET
NEXT X
PAINT STEP(4 * LM%, 4 * LM%), 8, 8
PAINT STEP(0, -7 * LM%), B, BC
PAINT STEP(0, -7 * LM%), B, BC
PAINT STEP(0, -7 * LM%), 8, BC
PAINT STEP(0, -7 * LM%), 4, BC
PAINT STEP(0, -7 * LM%), 4, BC
PAINT STEP(0, -7 * LM%), 8, BC

PSET (LOGOX%, LOGOY%), BC
LINE STEP(-35 * LM%, 7 * LM%)-STEP(0, 4 * LM%), 8
LINE STEP(0, 0)-STEP(-6 * LM%, 2 * LM%), 8
LINE STEP(0, 0)-STEP(0, -4 * LM%), 8
LINE STEP(0, 0)-STEP(6 * LM%, -2 * LM%), 8
PAINT STEP(-2 * LM%, 2 * LM%), 8, 8
GET STEP(-4 * LM%, -2 * LM%)-STEP(6 * LM%, 6 * LM%), BOX
PUT STEP(-6 * LM%, -6 * LM%), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7 * LM%), BOX, PSET
NEXT X
PAINT STEP(4 * LM%, -4 * LM%), B, BC
PAINT STEP(0, -7 * LM%), B, BC
PAINT STEP(0, -14 * LM%), 4, BC
PAINT STEP(0, -7 * LM%), 4, BC

PSET (LOGOX%, LOGOY%), BC
LINE STEP(-44 * LM%, 6 * LM%)-STEP(0, 3 * LM%), 8
LINE STEP(0, 0)-STEP(-5 * LM%, 2 * LM%), 8
LINE STEP(0, 0)-STEP(0, -3 * LM%), 8
LINE STEP(0, 0)-STEP(5 * LM%, -2 * LM%), 8
PAINT STEP(-2 * LM%, 2 * LM%), 8, 8
GET STEP(-3 * LM%, -2 * LM%)-STEP(5 * LM%, 5 * LM%), BOX
PUT STEP(-5 * LM%, -5 * LM%), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7 * LM%), BOX, PSET
NEXT X
PAINT STEP(4 * LM%, -4 * LM%), B, BC
PAINT STEP(0, -7 * LM%), B, BC
PAINT STEP(0, -14 * LM%), 4, BC
PAINT STEP(0, -7 * LM%), 4, BC

PSET (LOGOX%, LOGOY%), BC
LINE STEP(-51 * LM%, 5 * LM%)-STEP(0, 2 * LM%), 8
LINE STEP(0, 0)-STEP(-4 * LM%, 2 * LM%), 8
LINE STEP(0, 0)-STEP(0, -2 * LM%), 8
LINE STEP(0, 0)-STEP(4 * LM%, -2 * LM%), 8
PAINT STEP(-1 * LM%, 1 * LM%), 8, 8
PAINT STEP(-1 * LM%, 1 * LM%), 8, 8
GET STEP(-2 * LM%, -2 * LM%)-STEP(4 * LM%, 4 * LM%), BOX
PUT STEP(-4 * LM%, -4 * LM%), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7 * LM%), BOX, PSET
NEXT X
PAINT STEP(3, -5 * LM%), B, BC
PAINT STEP(0, -7 * LM%), B, BC
PAINT STEP(0, -14 * LM%), 4, BC
PAINT STEP(0, -7 * LM%), 4, BC
END SUB

