REM execs
DECLARE SUB BUTTON (X1!, Y1!, X2!, Y2!, HL!, SH!, CL!)
IF LEN(COMMAND$) = 1 THEN LET DRIVE$ = UCASE$(COMMAND$) ELSE LET DRIVE$ = "C"

GOSUB BACKROUND
 CALL BUTTON(60, 75, 580, 135, 7, 6, 5)
 LOCATE 7, 10: COLOR 2
 IF DRIVE$ <> "C" THEN
  PRINT "PLEASE INSERT DISK INTO DRIVE "; DRIVE$; " AND PRESS ANY KEY TO CONTINUE."
  DO
  LOOP WHILE INKEY$ = ""
 END IF
 LOCATE 9, 23: PRINT "PLEASE WAIT WHILE CHECKING DISK..."

 LET S$ = "DIR " + DRIVE$ + ":\*.EXE /S/B > EXEC.LST": SHELL S$
 LET S$ = "DIR " + DRIVE$ + ":\*.COM /S/B >> EXEC.LST": SHELL S$
 LET S$ = "DIR " + DRIVE$ + ":\*.BAT /S/B >> EXEC.LST": SHELL S$

 LINE (55, 70)-(590, 140), 1, BF

SKIP:

OPEN "EXEC.LST" FOR INPUT AS #2
 IF LOF(2) < 1 THEN CLS : END
 DO
  INPUT #2, TRASH$
  DN = DN + 1
 LOOP UNTIL (EOF(2))
CLOSE #2
DIM EXEC$(DN)

OPEN "EXEC.LST" FOR INPUT AS #1
 DO
  INPUT #1, LINE$
  LET EXEC$(NUM) = LEFT$(LINE$, 32)
  NUM = NUM + 1
 LOOP UNTIL (EOF(1))
CLOSE #1
CHK = 9: NUM = NUM - 1
IF NUM < CHK THEN LET FIN = NUM - EXTRA ELSE LET FIN = CHK - EXTRA

FOR Y = 0 TO DN
  IF RIGHT$(EXEC$(Y), 3) = "EXE" THEN LET EN = EN + 1
  IF RIGHT$(EXEC$(Y), 3) = "COM" THEN LET CN = CN + 1
  IF RIGHT$(EXEC$(Y), 3) = "BAT" THEN LET BN = BN + 1
NEXT Y

 CALL BUTTON(400, 70, 610, 180, 6, 7, 5)
 COLOR 3: LOCATE 7, 53: PRINT "NUMBER OF EXECUTABLES: "
 LOCATE 8, 62: PRINT DN
 LOCATE 10, 60: PRINT "EXE : "; EN
 LOCATE 11, 60: PRINT "COM : "; CN
 LOCATE 12, 60: PRINT "BAT : "; BN

START:
COLOR 2
LINE (90, 50)-(390, 340), 1, BF

BT = 0
FOR Y = 0 TO FIN
 CALL BUTTON(100, 52 + BT, 380, 73 + BT, 7, 6, 5)
 LOCATE 5 + (Y * 2), 15: PRINT EXEC$(Y + EXTRA)
 BT = BT + 28
NEXT Y
COLOR 1: LOCATE 5, 15: PRINT EXEC$(EXTRA)
P = 0

GETKEY:
DO
 A$ = INKEY$
LOOP UNTIL A$ = ""
DO
 A$ = INKEY$
LOOP WHILE A$ = ""

IF A$ = CHR$(13) THEN GOTO PRESS
IF A$ = CHR$(0) + "P" THEN    'DOWN
  IF P + EXTRA = NUM THEN GOTO GETKEY
  IF P = FIN THEN GOTO MORE
  COLOR 2: LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  P = P + 1
  COLOR 1: LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  GOTO GETKEY
END IF
IF A$ = CHR$(0) + "H" THEN    'UP
  IF P = 0 AND EXTRA > 0 THEN GOTO BACK
  IF P = 0 THEN GOTO GETKEY
  COLOR 2: LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  P = P - 1
  COLOR 1: LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  GOTO GETKEY
END IF
IF A$ = CHR$(0) + "M" THEN
END IF
IF A$ = CHR$(0) + "K" THEN
END IF
IF A$ = CHR$(0) + "Q" AND NUM > CHK THEN GOTO MORE
IF A$ = CHR$(27) THEN
 SHELL "DEL EXEC.LST"
 END
END IF
GOTO GETKEY


PRESS:
  CALL BUTTON(100, 52 + (P * 28), 380, 73 + (P * 28), 6, 5, 5)
  LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  FOR PAUSE = 1 TO 1000: NEXT PAUSE
   IF RIGHT$(EXEC$(P + EXTRA), 3) = "BAT" THEN GOTO SORRY
  CALL BUTTON(100, 52 + (P * 28), 380, 73 + (P * 28), 7, 6, 5)
  LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
  VX = 5
  DO
   VX = VX + 1
  LOOP UNTIL MID$(EXEC$(P + EXTRA), LEN(EXEC$(P + EXTRA)) - VX, 1) = "\"
  'PRINT RIGHT$(EXEC$(P + EXTRA), VX)
  'PRINT LEFT$(EXEC$(P + EXTRA), LEN(EXEC$(P + EXTRA)) - VX - 1)
  SD$ = DRIVE$ + ":"
  SHELL "DEL EXEC.LST": SHELL SD$
  IF LEN(EXEC$(P + EXTRA)) - VX > 3 THEN CHDIR LEFT$(EXEC$(P + EXTRA), LEN(EXEC$(P + EXTRA)) - VX - 1)
  CHAIN RIGHT$(EXEC$(P + EXTRA), VX)
  END
GOTO GETKEY

MORE:
  EXTRA = EXTRA + 10
  LET CHK = CHK + 10
  IF NUM < CHK THEN LET FIN = NUM - EXTRA ELSE LET FIN = CHK - EXTRA
GOTO START
BACK:
  EXTRA = EXTRA - 10
  CHK = CHK - 10
  FIN = 9
GOTO START

SORRY:
 CALL BUTTON(400, 290, 615, 325, 6, 7, 5)
 LOCATE 22, 52: PRINT "SORRY, THIS PROGRAM CAN'T"
 LOCATE 23, 53: PRINT "HANDLE BATCH FILES YET!"
 DO
 LOOP WHILE INKEY$ = ""
 LINE (400, 290)-(620, 325), 1, BF
 CALL BUTTON(100, 52 + (P * 28), 380, 73 + (P * 28), 7, 6, 5)
 LOCATE 5 + (P * 2), 15: PRINT EXEC$(P + EXTRA)
GOTO GETKEY

BACKROUND:
SCREEN 9', , 1, 0
 COLOR 2, 7
 LINE (0, 0)-(640, 350), 1, BF
 PALETTE 5, 7
 PALETTE 6, 56
 PALETTE 7, 63
 PALETTE 8, 0
 PALETTE 9, 8
XP = 600: YP = 170

LET BC = 1: B = 9
PI# = 3.1415927#
S = 65
SR = S / 180 * PI#
ER = (180 - S) / 180 * PI#
X = 1
PSET (XP, YP), BC
CIRCLE STEP(-75, 95), 60, 8, SR, ER
CIRCLE STEP(0, 5), 60, 8, SR + .1, ER - .1
CIRCLE STEP(0, 16), 60, 8, SR + .1, ER - .1
CIRCLE STEP(0, 5), 60, 8, SR + .1, ER - .1
CIRCLE STEP(0, 16), 60, 8, SR + .1, ER - .1
CIRCLE STEP(0, 5), 60, 8, SR, ER
REM 310,380
LINE STEP(-23, -87)-STEP(0, 47), 8
LINE STEP(8, -44)-STEP(0, 37), 8   '258,276
LINE STEP(11, -39)-STEP(0, 37), 8   '300,270
LINE STEP(8, -37)-STEP(0, 37), 8    '320,270
LINE STEP(11, -35)-STEP(0, 37), 8
LINE STEP(8, -40)-STEP(0, 47), 8    '385,276
PAINT STEP(-3, -3), 8, 8
PAINT STEP(-20, -10), 8, 8    '310,150
PAINT STEP(0, -15), 8, 8
PAINT STEP(0, -5), 8, 8
PAINT STEP(-5, 5), 8, 8    '310,255
PAINT STEP(10, 0), 8, 8

PAINT STEP(-10, -10), 4, 8
PAINT STEP(0, 15), B, 8    '260,220
PAINT STEP(10, 0), 14, 8
PAINT STEP(0, -15), 2, 8  '340,120
CIRCLE STEP(13, 13), 1, 6
PAINT STEP(0, 0), 6, 6

PSET (XP, YP), BC
LINE STEP(-101, 55)-STEP(0, 5), 8
LINE STEP(0, 0)-STEP(-7, 2), 8
LINE STEP(0, 0)-STEP(0, -5), 8
LINE STEP(0, 0)-STEP(7, -2), 8
PAINT STEP(-2, 2), 8, 8
DIM BOX(20)
GET STEP(-5, -2)-STEP(7, 7), BOX
PUT STEP(-7, -7), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7), BOX, PSET
NEXT X
PAINT STEP(4, 4), 8, 8
PAINT STEP(0, -7), B, BC
PAINT STEP(0, -7), B, BC
PAINT STEP(0, -7), 8, BC
PAINT STEP(0, -7), 4, BC
PAINT STEP(0, -7), 4, BC
PAINT STEP(0, -7), 8, BC

PSET (XP, YP), BC
LINE STEP(-111, 55)-STEP(0, 4), 8
LINE STEP(0, 0)-STEP(-6, 2), 8
LINE STEP(0, 0)-STEP(0, -4), 8
LINE STEP(0, 0)-STEP(6, -2), 8
PAINT STEP(-2, 2), 8, 8
GET STEP(-4, -2)-STEP(6, 6), BOX
PUT STEP(-6, -6), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7), BOX, PSET
NEXT X
PAINT STEP(4, -4), B, BC
PAINT STEP(0, -7), B, BC
PAINT STEP(0, -14), 4, BC
PAINT STEP(0, -7), 4, BC

PSET (XP, YP), BC
LINE STEP(-120, 54)-STEP(0, 3), 8
LINE STEP(0, 0)-STEP(-5, 2), 8
LINE STEP(0, 0)-STEP(0, -3), 8
LINE STEP(0, 0)-STEP(5, -2), 8
PAINT STEP(-2, 2), 8, 8
GET STEP(-3, -2)-STEP(5, 5), BOX
PUT STEP(-5, -5), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7), BOX, PSET
NEXT X
PAINT STEP(3, -3), B, BC
PAINT STEP(0, -7), B, BC
PAINT STEP(0, -14), 4, BC
PAINT STEP(0, -7), 4, BC

PSET (XP, YP), BC
LINE STEP(-128, 53)-STEP(0, 2), 8
LINE STEP(0, 0)-STEP(-4, 2), 8
LINE STEP(0, 0)-STEP(0, -2), 8
LINE STEP(0, 0)-STEP(4, -2), 8
PAINT STEP(-1, 1), 8, 8
PAINT STEP(-1, 1), 8, 8
GET STEP(-2, -2)-STEP(4, 4), BOX
PUT STEP(-4, -4), BOX, PSET
FOR X = 1 TO 6
 PUT STEP(0, 7), BOX, PSET
NEXT X
PAINT STEP(3, -5), B, BC
PAINT STEP(0, -7), B, BC
PAINT STEP(0, -14), 4, BC
PAINT STEP(0, -7), 4, BC


 CALL BUTTON(120, 10, 520, 30, 6, 7, 5)
 COLOR 4: LOCATE 2, 28: PRINT "EXEC CHECK - by Paul Egan"
'SCREEN 9, , 1, 1
RETURN
END

SUB BUTTON (X1, Y1, X2, Y2, HL, SH, CL)
LINE (X1, Y1)-(X2, Y2), CL, BF
FOR A = 0 TO 2
 LINE (X1 + A, Y2 - A)-(X1 + A, Y1 + A), HL
 LINE STEP(0, 0)-(X2 - A, Y1 + A), HL
 LINE (X1 + A, Y2 - A)-(X2 - A, Y2 - A), SH
 LINE STEP(0, 0)-(X2 - A, Y1 + A), SH
NEXT A
END SUB

