#!/bin/sh

# verify you are root
/usr/bin/id | grep -w 'uid=0' >/dev/null 2>&1
if [ "$?" != "0" ]; then
	echo \"$0\" must be run as root.
	exit 1
fi

# handle the optional command line argument
case $# in

   1) ftphome=$1
      ;;

   *) echo "Usage: $0 [ftp-root]"
      exit 1
      ;;
esac

if [ -z "${ftphome}" ]; then
   echo "$0: ftphome must be non-null"
   exit 2
fi

case ${ftphome} in
	/*) # ok
	    ;;

	*) echo "$0: ftphome must be an absolute pathname"
	   exit 1
	   ;;
esac	  

# This script assumes that ftphome is neither / nor /usr so ...
if [ -z "${ftphome}" -o "${ftphome}" = "/" -o "${ftphome}" = "/usr" ]; then
   echo "$0: ftphome must be non-null and neither / or /usr"
   exit 2
fi

# If ftphome does not exist but parent does, create ftphome
if [ ! -d ${ftphome} ]; then
    # lack of -p below is intentional
    mkdir ${ftphome}
fi
chown root ${ftphome}
chmod 555 ${ftphome}

echo Setting up ftp area ${ftphome}

# Ensure that the /usr directory exists
if [ ! -d ${ftphome}/usr ]; then
    mkdir -p ${ftphome}/usr
fi
# Now set the ownership and modes to match the man page
chown root ${ftphome}/usr
chmod 555 ${ftphome}/usr

# Ensure that the /usr/bin directory exists
if [ ! -d ${ftphome}/usr/bin ]; then
    mkdir -p ${ftphome}/usr/bin
fi
# Now set the ownership and modes to match the man page
chown root ${ftphome}/usr/bin
chmod 555 ${ftphome}/usr/bin

# this may not be the right thing to do
# but we need the bin -> usr/bin link
rm -f ${ftphome}/bin ${ftphome}/usr/sbin
ln -s usr/bin ${ftphome}/bin
ln -s bin ${ftphome}/usr/sbin


# Ensure that the /usr/lib and /etc directories exist
if [ ! -d ${ftphome}/usr/lib ]; then
    mkdir -p ${ftphome}/usr/lib
fi
chown root ${ftphome}/usr/lib
chmod 555 ${ftphome}/usr/lib
ln -s . ${ftphome}/usr/lib/security

if [ ! -d ${ftphome}/etc ]; then
    mkdir -p ${ftphome}/etc
fi
chown root ${ftphome}/etc
chmod 555 ${ftphome}/etc

# Standard etc files & minumum pam.conf
cp /etc/passwd /etc/group /etc/netconfig /etc/ftpusers /etc/shells ${ftphome}/etc
grep '^other' /etc/pam.conf > ${ftphome}/etc/pam.conf
chmod 444 ${ftphome}/etc/*
cp  /etc/shadow ${ftphome}/etc
chmod 400 ${ftphome}/etc/shadow

# a list of all the commands that should be copied to ${ftphome}/usr/bin
# /usr/bin/ls is needed at a minimum.
ftpcmd=" 
	/usr/bin/ls
	/usr/sbin/in.ftpd
"

# ${ftphome}/usr/lib needs to have all the libraries needed by the above
# commands, plus the runtime linker, and some name service libraries
# to resolve names. We just take all of them here.

ftplib="`ldd $ftpcmd | nawk '$3 ~ /lib/ { print $3 }' | sort | uniq`"
ftplib="$ftplib /usr/lib/nss_* /usr/lib/straddr* /usr/lib/libmp.so* /usr/lib/security/pam_unix.so.1"
ftplib="$ftplib /usr/lib/libnsl.so.1 /usr/lib/libsocket.so.1 /usr/lib/ld.so.1"
ftplib="`echo $ftplib | tr ' ' '\n' | sort | uniq`"

cp ${ftplib} ${ftphome}/usr/lib
chmod 555 ${ftphome}/usr/lib/*

cp ${ftpcmd} ${ftphome}/usr/bin
echo "exit 255" > ${ftphome}/usr/bin/false
chmod 111 ${ftphome}/usr/bin/* 

# need /etc/default/init for timezone to be correct 
if [ ! -d ${ftphome}/etc/default ]; then 
	mkdir ${ftphome}/etc/default 
fi
chown root ${ftphome}/etc/default    
chmod 555 ${ftphome}/etc/default
cp /etc/default/init ${ftphome}/etc/default  
chmod 444 ${ftphome}/etc/default/init 
if [ -f /etc/default/ftpd ]; then
	cp /etc/default/ftpd ${ftphome}/etc/default  
	chmod 444 ${ftphome}/etc/default/ftpd 
fi

# Copy timezone database
mkdir -p ${ftphome}/usr/share/lib/zoneinfo
(cd ${ftphome}/usr/share/lib/zoneinfo
  (cd /usr/share/lib/zoneinfo; find . -print | cpio -o) 2>/dev/null \
	| cpio -imdu 2>/dev/null
  find . -print | xargs chmod 555
  find . -print | xargs chown root
)


# Ensure that the /dev directory exists
if [ ! -d ${ftphome}/dev ]; then
    mkdir -p ${ftphome}/dev
fi

# make device nodes. ticotsord and udp are necessary for
# 'ls' to resolve NIS names.

for device in zero tcp udp ticotsord ticlts conslog null
do
   line=`ls -lL /dev/${device} | sed -e 's/,//'`
   major=`echo $line | awk '{print $5}'`
   minor=`echo $line | awk '{print $6}'`
   rm -f ${ftphome}/dev/${device}
   mknod ${ftphome}/dev/${device} c ${major} ${minor}
done

chmod 666 ${ftphome}/dev/*

## Now set the ownership and modes
chown root ${ftphome}/dev
chmod 555 ${ftphome}/dev


if [ ! -d ${ftphome}/var/adm ]; then
    mkdir -p ${ftphome}/var/adm
fi
chmod 755 ${ftphome}/var ${ftphome}/var/adm
touch ${ftphome}/var/adm/daemon ${ftphome}/var/adm/lastlog ${ftphome}/var/adm/wtmp ${ftphome}/var/adm/wtmpx
chmod 644 ${ftphome}/var/adm/*

if [ ! -d ${ftphome}/pub ]; then
   mkdir -p ${ftphome}/pub
fi
chmod 775 ${ftphome}/pub
if [ ! -d ${ftphome}/incoming ]; then
   mkdir -p ${ftphome}/incoming
fi
chmod 771 ${ftphome}/incoming
if [ ! -d ${ftphome}/outgoing ]; then
   mkdir -p ${ftphome}/outgoing
fi
chmod 771 ${ftphome}/outgoing
